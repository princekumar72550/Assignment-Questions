# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1T4XFl1dHigny49mcteIhM2uHTJV9BHgq
"""

Q1. How can you create a Bokeh plot using Python code?

*Install the Bokeh library using pip or conda.
*Import the necessary modules from the Bokeh library.
*Create a new plot using the figure() function.
*Add glyphs to the plot using the appropriate glyph function (e.g., line(), circle(), etc.).
*Customize the plot by setting various attributes of the plot and its components (e.g., title, axis labels, colors, etc.).
*Display the plot using the show() function.

from bokeh.plotting import figure, show
from bokeh.io import output_notebook

x = [1, 2, 3, 4, 5]
y = [6, 7, 2, 4, 8]

p = figure(title="Simple Bokeh Plot", x_axis_label='X-axis', y_axis_label='Y-axis')
p.line(x, y, legend_label='Line', line_width=2)

output_notebook()
show(p)

Q2. What are glyphs in Bokeh, and how can you add them to a Bokeh plot? Explain with an example.

A glyph is a vectorized graphical shape or marker that is used to represent your data.
To add more line graphs to your plot, all you need to do is call the line() function multiple times.

from bokeh.plotting import figure, show
from bokeh.io import output_notebook

x = [1, 2, 3, 4, 5]
y = [6, 7, 2, 4, 8]

p = figure(title="Bokeh Plot with Glyphs", x_axis_label='X-axis', y_axis_label='Y-axis')
p.circle(x, y, size=10, color='blue', alpha=0.8, legend_label='Circle')
p.line(x, y, line_width=2, color='red', legend_label='Line')

output_notebook()
show(p)

Q3. How can you customize the appearance of a Bokeh plot, including the axes, title, and legend?

In Bokeh, the legends correspond to glyphs. This article how Legends appearing in the bokeh plot can be customized.
We can customize the legend with its several attributes such as location, color, line-color, font-size, font-style line width.

from bokeh.io import curdoc
from bokeh.plotting import figure, show

x = [1, 2, 3, 4, 5]
y = [4, 5, 5, 7, 2]

curdoc().theme = "dark_minimal"

p = figure(sizing_mode="stretch_width", max_width=500, height=250)

p.line(x, y)

show(p)

Q4. What is a Bokeh server, and how can you use it to create interactive plots that can be updated in
real time?

The Bokeh server is a component of Bokeh that allows you to build interactive web applications that are connected to Python code running on a server.

To create interactive plots that can be updated in real-time using Bokeh Server, you can define a Bokeh Server application.
Bokeh Server allows you to run a Python script that serves interactive visualizations, and it can handle interactions, updates,
and callbacks on the server side.

Q5. How can you embed a Bokeh plot into a web page or dashboard using Flask or Django?

To embed a Bokeh plot into a web page or dashboard using Flask or Django, you can use the components function provided by Bokeh.
This function generates the HTML and JavaScript code needed to embed a Bokeh plot into a web page.